env:
  - CGO_ENABLED=1

builds:
  # - id: armaria-darwin-amd64
  #   binary: armaria
  #   main: ./cmd/cli
  #   goarch:
  #     - amd64
  #   goos:
  #     - darwin
  #   env:
  #     - CC=zig cc -target x86_64-macos-none -g0
  #     - CXX=zig c++ -target x86_64-macos-none -g0
  #   flags:
  #     - -trimpath
  #     - -tags=fts5 netgo osusergo
  #     - -buildmode=pie
  #   ldflags:
  #     - -s
  #     - -w

  # - id: armaria-darwin-arm64
  #   binary: armria
  #   main: ./cmd/cli
  #   goarch:
  #     - arm64
  #   goos:
  #     - darwin
  #   env:
  #     - CC=zig cc -target aarch64-macos-none -g0
  #     - CXX=zig c++ -target aarch64-macos-none -g0
  #   flags:
  #     - -trimpath
  #     - -tags=fts5 netgo osusergo
  #     - -buildmode=pie
  #   ldflags:
  #     - -s
  #     - -w
      
  - id: armaria-linux-amd64
    binary: armaria
    main: ./cmd/cli
    env:
      - CC=zig cc -target x86_64-linux-musl -g0
      - CXX=zig c++ -target x86_64-linux-musl -g0
      # https://github.com/mattn/go-sqlite3/issues/1164
      - CGO_CFLAGS="-D_LARGEFILE64_SOURCE"
    goarch:
      - amd64
    goos:
      - linux
    flags:
      - -trimpath
      - -tags=fts5
    ldflags:
      - -s
      - -w

  - id: armaria-host-linux-amd64
    binary: armaria-host
    main: ./cmd/host
    env:
      - CC=zig cc -target x86_64-linux-musl -g0
      - CXX=zig c++ -target x86_64-linux-musl -g0
      # https://github.com/mattn/go-sqlite3/issues/1164
      - CGO_CFLAGS="-D_LARGEFILE64_SOURCE"
    goarch:
      - amd64
    goos:
      - linux
    flags:
      - -trimpath
      - -tags=fts5
    ldflags:
      - -s
      - -w

  - id: armaria-windows-amd64
    binary: armaria
    main: ./cmd/cli
    goarch:
      - amd64
    goos:
      - windows
    env:
      - CC=zig cc -target x86_64-windows-gnu -g0
      - CXX=zig c++ -target x86_64-windows-gnu -g0
    flags:
      - -trimpath
      - -buildmode=exe
      - -tags=fts5
    ldflags:
      - -s
      - -w

  - id: armaria-host-windows-amd64
    binary: armaria-host
    main: ./cmd/host
    goarch:
      - amd64
    goos:
      - windows
    env:
      - CC=zig cc -target x86_64-windows-gnu -g0
      - CXX=zig c++ -target x86_64-windows-gnu -g0
    flags:
      - -trimpath
      - -buildmode=exe
      - -tags=fts5
    ldflags:
      - -s
      - -w

# universal_binaries:
#   - id: armaria-darwin-universal
#     ids:
#       - armaria-darwin-amd64
#       - armaria-darwin-arm64
#     replace: true
#     name_template: "armaria"

archives:
  - id: w/version
    builds:
      - armaria-linux-amd64
      - armaria-host-linux-amd64
      - armaria-windows-amd64
      - armaria-host-windows-amd64
    name_template: "armaria_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    wrap_in_directory: false
    format: zip
    files:
      - none*

checksum:
  name_template: 'checksums.txt'

gomod:
  proxy: true

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc

sboms:
  - artifacts: archive

snapcrafts:
  - id: armaria-snap
    builds:
      - armaria-linux-amd64
      - armaria-host-linux-amd64
    name_template: "armaria_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    name: armaria
    title: Armaria
    icon: ./art/icon-light.svg
    # publish: true
    summary: Armaria is a fast local-first bookmark manager.
    description: Armaria is a FOSS bookmarks manager that keeps all of your local bookmarks in a SQLite database. You can use many different frontends to manage your bookmarks including browsers, and back them up and/or sync them however you see fit.
    confinement: strict
    license: MIT
    base: core18
    apps:
      armaria:  
        command: armaria
        plugs: ["dot-mozilla", "dot-chrome", "dot-chromium"]
      armaria-host:
        command: armaria-host
    plugs:
      dot-mozilla:
        interface: personal-files
        write:
          - $HOME/.mozilla/native-messaging-hosts
      dot-chrome:
        interface: personal-files
        write:
          - $HOME/.config/google-chrome/NativeMessagingHosts
      dot-chromium:
        interface: personal-files
        write:
          - $HOME/.config/chromium/NativeMessagingHosts
