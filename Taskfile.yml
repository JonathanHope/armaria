version: '3'

tasks:
  lint:
    cmds:
      - golangci-lint run --config .golangci.yml --timeout 3m
  test-bdd:
    dir: test
    cmds:
      - go test --tags "fts5"
  test-internal:
    dir: internal
    cmds:
      - go test ./...
  test-host:
    dir: cmd/host
    cmds:
      - go test --tags "fts5" ./...
  test:
    cmds:
      - task: test-internal
      - task : test-host
      - task: test-bdd
  build-cli:
    dir: cmd/cli
    cmds:
      - go build --tags "fts5"
      - cp cli ../../armaria
  build-host:
    dir: cmd/host
    cmds:
      - go build --tags "fts5"
      - cp host ../../armaria-host
  build:
    cmds:
      - task: build-cli
      - task: build-host
  migrate-up:
    cmds:
      - goose -dir ./internal/db/migrations sqlite3 ./bookmarks.db up
  migrate-down:
    cmds:
      - goose -dir ./internal/db/migrations sqlite3 ./bookmarks.db down
  clean:
    cmds:
      - rm -f armaria
      - rm -f armaria-host
      - rm -f cmd/cli/cli
      - rm -f cmd/host/host
      - find . -name "*.db" -type f -delete
      - find . -name "*.db-shm" -type f -delete
      - find . -name "*.db-wal" -type f -delete
  release:
    cmds:
      - docker run -v $(pwd):/src -w /src -e GITHUB_TOKEN=$GITHUB_TOKEN -i goreleaser/goreleaser-cross:v1.20 release
  release-snapshot:
    cmds:
      - docker run -v $(pwd):/src -w /src -i goreleaser/goreleaser-cross:v1.20 release --snapshot
  install-native-manifest:
    cmds:
      - mkdir -p ~/.mozilla/native-messaging-hosts/
      - cp armaria.json ~/.mozilla/native-messaging-hosts/
