version: '3'

tasks:
  lint-lib:
    dir: lib
    cmds:
      - golangci-lint run --config ../.golangci.yml  --timeout 3m
  lint-cli:
    dir: cli
    cmds:
      - golangci-lint run --config ../.golangci.yml --timeout 3m
  lint-bdd:
    dir: bdd
    cmds:
      - golangci-lint run --config ../.golangci.yml --timeout 3m
  lint:
    cmds:
      - task: lint-lib
      - task: lint-cli
      - task: lint-bdd
  test-bdd:
    dir: bdd
    cmds:
      - go test --tags "fts5"
  test-lib:
    dir: lib
    cmds:
      - go test --tags "fts5"
  test:
    cmds:
      - task: test-bdd
      - task: test-lib
  build:
    dir: cli
    cmds:
      - go build --tags "fts5" -ldflags "-s -w"
      - cp cli ../armaria
  migrate-up:
    cmds:
      - goose -dir ./lib/migrations sqlite3 ./bookmarks.db up
  migrate-down:
    cmds:
      - goose -dir ./lib/migrations sqlite3 ./bookmarks.db down
  clean:
    cmds:
      - rm -f armaria
      - rm -f cli/cli
      - find . -name "*.db" -type f -delete
      - find . -name "*.db-shm" -type f -delete
      - find . -name "*.db-wal" -type f -delete
  release:
    cmds:
      - docker run -v $(pwd):/src -w /src -e GITHUB_TOKEN=$GITHUB_TOKEN -i goreleaser/goreleaser-cross:v1.20 release
  release-snapshot:
    cmds:
      - docker run -v $(pwd):/src -w /src -i goreleaser/goreleaser-cross:v1.20 release --snapshot
